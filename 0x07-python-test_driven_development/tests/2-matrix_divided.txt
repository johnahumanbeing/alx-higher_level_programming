How to: Usage of 2-matrix_divided.py
(this is like a readme for the above file)
NB: ('i.e' means that is...)

This library contains one function named ``matrix_divided``
that divides all elements of a matrix by div

Valid Cases

``matrix_divided`` returns a new matrix with all elements
are the result of division of matrix by div, rounded to 2
decimal places

All matrix elements are integers

i.e

	>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
	>>> matrix = [
	...	[1, 2, 3],
	...	[4, 5, 6]
	...	]
	>>> matrix_divided(matrix, 3)
	[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

All matrix elements are float

i.e

	>>> matrix = [
	...	[2.5, 3.6, 5.1],
	...	[0.5, 7.9, 6.24]
	...	]
	>>> matrix_divided(matrix, 2.5)
	[[1.0, 1.44, 2.04], [0.2, 3.16, 2.5]]

matrix elements are int and float

i.e

	>>> matrix = [
	...	[5.45, -8, 0],
	...	[6.32, 0.71, -12]
	...	]
	>>> matrix_divided(matrix, -2)
	[[-2.73, 4.0, -0.0], [-3.16, -0.35, 6.0]]

Empty matrix

i.e

	>>> matrix = [[]]
	>>> matrix_divided(matrix, 5)
	[[]]

Invalid Cases

matrix is an empty list

i.e

	>>> matrix = []
	>>> matrix_divided(matrix, 6)
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats

matrix is a list of int elements

i.e

	>>> matrix = [1, 2, 3, 4]
	>>> matrix_divided(matrix, 2.5)
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats

matrix is list of list but contains elements that are not
int and float

i.e

	>>> matrix = [[2.8, "A"], ["H", 27]]
	>>> matrix_divided(matrix, 4)
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats

matrix rows have not the same length

i.e

	>>> matrix = [
	...	[2, 8, 9, 2.0],
	...	[1.6, 7],
	...	[3.5, 5, 4]
	...	]
	>>> matrix_divided(matrix, 3)
	Traceback (most recent call last):
	TypeError: Each row of the matrix must have the same size

div is not a number(int or float)

::

	>>> matrix = [
	...	[3, 5, 9],
	...	[4, 7, 0]
	...	]
	>>> matrix_divided(matrix, "str")
	Traceback (most recent call last):
	TypeError: div must be a number

div equal to 0(zero)

::

	>>> matrix = [
	...	[8, 4, 2],
	...	[4, 8, 7]
	...	]
	>>> matrix_divided(matrix, 0)
	Traceback (most recent call last):
	ZeroDivisionError: division by zero
