Usage for: 7-base_geometry.py
(this is like a readme / user manuall)

("i.e" means that is / for example)

These are the tests for ``BaseGeometry`` class that contains
two methods ``area()`` and ``interger_validator()``

create an instance of BaseGeometry and call area method

i.e

	>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
	>>> bg = BaseGeometry()
	>>> bg.area()
	Traceback (most recent call last):
	Exception: area() is not implemented

create an instance of BaseGeometry and call integer_validator with integer (int) value
i.e

	>>> bg = BaseGeometry()
	>>> bg.integer_validator("width", 16)

create an instance of BaseGeometry and call integer_validator with negative int
i.e

	>>> bg = BaseGeometry()
	>>> bg.integer_validator("width", -6)
	Traceback (most recent call last):
	ValueError: width must be greater than 0

create an instance of BaseGeometry and call integer_validator with value == 0
i.e

	>>> bg = BaseGeometry()
	>>> bg.integer_validator("width", 0)
	Traceback (most recent call last):
	ValueError: width must be greater than 0

create an instance of BaseGeometry and call integer_validator with no int value
i.e

	>>> bg = BaseGeometry()
	>>> bg.integer_validator("width", "str")
	Traceback (most recent call last):
	TypeError: width must be an integer

create an instance of BaseGeometry and call integer_validator with one argument
i.e

	>>> bg = BaseGeometry()
	>>> bg.integer_validator("width")
	Traceback (most recent call last):
	TypeError: integer_validator() missing 1 required positional argument: 'value'

create an instance of BaseGeometry and call integer_validator without arguments
i.e

	>>> bg = BaseGeometry()
	>>> bg.integer_validator()
	Traceback (most recent call last):
	TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

create an instance of BaseGeometry and call integer_validator with 3 args
i.e

	>>> bg = BaseGeometry()
	>>> bg.integer_validator("width", 1, 5)
	Traceback (most recent call last):
	TypeError: integer_validator() takes 3 positional arguments but 4 were given

create an instance of BaseGeometry and call area with arg
i.e

	>>> bg = BaseGeometry()
	>>> bg.area(10)
	Traceback (most recent call last):
	TypeError: area() takes 1 positional argument but 2 were given

create an instance of BaseGeometry and call integer_validator with None value
i.e

	>>> bg = BaseGeometry()
	>>> bg.integer_validator("width", None)
	Traceback (most recent call last):
	TypeError: width must be an integer

create an instance of BaseGeometry and call integer_validator with dict value
i.e

	>>> bg = BaseGeometry()
	>>> bg.integer_validator("width", {"first", 1})
	Traceback (most recent call last):
	TypeError: width must be an integer

create an instance of BaseGeometry and call integer_validator with tuple value
i.e

	>>> bg = BaseGeometry()
	>>> bg.integer_validator("width", (1, 2))
	Traceback (most recent call last):
	TypeError: width must be an integer

create an instance of BaseGeometry and call integer_validator with list value
i.e

	>>> bg = BaseGeometry()
	>>> bg.integer_validator("width", [1, 2])
	Traceback (most recent call last):
	TypeError: width must be an integer

create an instance of BaseGeometry and call integer_validator with Boolean
(boolean means a result that can only have two possible values(True or False))
i.e

	>>> bg = BaseGeometry()
	>>> bg.integer_validator("width", False)
	Traceback (most recent call last):
	TypeError: width must be an integer
